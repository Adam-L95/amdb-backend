{"version":3,"sources":["components/SearchBar.js","components/Menu.js","components/MovieSearchDisplay.js","services/movies.js","components/SearchDisplay.js","services/user.js","components/WatchlistButton.js","components/DiaryButton.js","components/FilmCard.js","components/MovieInfo.js","components/Watchlist.js","components/Diary.js","components/Notification.js","components/Error.js","components/LoginForm.js","components/CreateUserForm.js","components/HomePage.js","services/login.js","services/createUser.js","App.js","index.js"],"names":["SearchBar","useState","searchTerm","setSearchTerm","history","useHistory","Form","inline","onSubmit","event","preventDefault","searchFor","replace","push","goBack","Control","className","type","id","value","placeholder","onChange","target","Button","variant","Menu","props","Navbar","bg","expand","to","Toggle","aria-controls","Collapse","Nav","user","watchlist","length","diary","username","Link","onClick","handleLogout","MovieSearchDisplay","title","release_date","poster_path","posterSource","src","alt","displayPoster","split","url","axios","get","then","response","data","results","searchURL","SearchDisplay","movies","setMovies","useParams","useEffect","movieService","replaceAll","Table","striped","sort","a","b","popularity","map","movie","key","token","addToWatchlist","config","headers","Authorization","post","setToken","newToken","removeFromWatchlist","delete","addToDiary","WatchlistButton","setWatchlist","setNotify","setError","filter","entry","movieId","setTimeout","userService","retrunedObject","toAdd","returnedEntry","DiaryButton","setDiary","remove","FilmCard","cardSize","showCaption","style","width","Card","Img","Body","Title","MovieInfo","setNotifyMessage","setErrorMessage","details","setDetails","credits","setCredits","view","setView","viewAll","setViewAll","similarMovies","setSimilarMovies","detail","credit","viewOption","viewCast","cast","ListGroup","slice","Item","name","character","Spinner","animation","size","viewDetails","date","rDate","Date","getMonth","getDate","getFullYear","production_countries","cnt","spoken_languages","lang","iso_639_1","crew","job","overview","tagline","runtime","href","imdb_id","ButtonGroup","toggle","radio","index","ToggleButton","checked","page","credit_id","genres","genre","horizontal","viewSimilar","Watchlist","item","posterPath","releaseDate","Diary","parse","dateLogged","_id","Notification","message","Alert","Error","LoginForm","handleSubmit","Group","Label","handleUsernameChange","password","handlePasswordChange","CreateUserForm","handleNameChange","password2","handlePassword2Change","HomePage","nowPlaying","setNowPlaying","itemsToDisplay","window","orientation","vote_count","login","credentials","createUser","App","setUser","setUsername","setPassword","setPassword2","setName","errorMessage","notifyMessage","loggedUserJSON","localStorage","getItem","JSON","logUser","userToLog","setItem","stringify","handleLogin","loginService","handleNewUser","createUserService","console","log","removeItem","location","reload","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb0310c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst SearchBar = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const history = useHistory();\n\n    const getSearch = (event) => {\n        event.preventDefault();\n        const searchFor = searchTerm.replace(/\\s+/g, '+');\n        // setSearchTerm('');\n        history.push(`/search/${searchFor}`);\n        history.push('/temp');\n        history.goBack();\n        setSearchTerm('');\n    };\n\n    return (\n        <Form inline onSubmit={getSearch} >\n            <Form.Control className=\" mr-sm-2\" type=\"text\" id=\"search-bar\" value={searchTerm} placeholder=\"Search Movies...\" onChange={(event) => {setSearchTerm(event.target.value);}} />\n            <Button variant=\"primary\" type=\"submit\">Search</Button>\n        </Form>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\nimport SearchBar from '../components/SearchBar';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Menu = (props) => {\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                <Link to=\"/\" className=\"navbar-brand\">AMDb</Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {props.user ?\n                            <Link to=\"/watchlist\" className=\"nav-link\">\n                                Watchlist ({props.watchlist.length})\n                            </Link>\n                            :\n                            null\n                        }\n                        {props.user ?\n                            <Link to=\"/diary\" className=\"nav-link\">\n                                Diary ({props.diary.length})\n                            </Link>\n                            :\n                            null\n                        }\n                    </Nav>\n                    <Nav>\n                        {props.user ? <div className='nav-link'>{props.user.username}</div> : <Link className=\"nav-link\" to=\"/login\">login</Link>}\n                        {props.user ? <Nav.Link onClick={props.handleLogout}>Log out</Nav.Link> : null}\n                    </Nav>\n                </Navbar.Collapse>\n                <SearchBar />\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Menu;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieSearchDisplay = ({ title, release_date, poster_path, id }) => {\n    const displayPoster = (posterSource) => {\n        if (posterSource) {\n            return <img src={`http://image.tmdb.org/t/p/w92/${posterSource}`} alt={`movie #${id} poster`}/>;\n        }\n    };\n\n    return (\n        <tr>\n            <td>\n                <Link to={`/movies/${id}`} className=\"td\">\n                    {displayPoster(poster_path)}\n                    {title} ({release_date ? release_date.split('-')[0] : 'unreleased'})\n                </Link>\n            </td>\n        </tr>\n    );\n};\n\nexport default MovieSearchDisplay;","import axios from 'axios';\n\nconst url = '/api/search';\n\nconst getAll = () => {\n    const request = axios.get(url);\n    return request.then(response => response.data);\n};\n\nconst getNowPlaying = () => {\n    const request = axios.get(`${url}/movie/now_playing`);\n    return request.then(response => response.data.results);\n};\n\nconst getSelected = (id) => {\n    const request = axios.get(`${url}/movie/${id}`);\n    return request.then(response => response.data);\n};\n\nconst searchFor = (title) => {\n    const searchURL = `${url}/${title.replace(/\\s+/g, '+')}`;\n    const request = axios.get(searchURL);\n    return request.then(response => response.data.results);\n};\n\nconst getCredits = (id) => {\n    const request = axios.get(`${url}/movie/credits/${id}`);\n\n    return request.then(response => response.data);\n};\n\nconst getSimilar = (id) => {\n    const request = axios.get(`${url}/movie/similar_movies/${id}`);\n    return request.then(response => response.data.results);\n};\n\nexport default { getAll, getNowPlaying, getSelected, searchFor, getCredits, getSimilar };","import React, { useState, useEffect } from 'react';\nimport MovieSearchDisplay from './MovieSearchDisplay';\nimport movieService from '../services/movies';\nimport { ListGroup, Table } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\n\nconst SearchDisplay = () => {\n    const [movies, setMovies] = useState([]);\n    const searchTerm = useParams().searchTerm;\n    useEffect(() => {\n        movieService.searchFor(searchTerm).then(movies => setMovies(movies));\n    }, []);\n\n    // const searchTerm = useParams().searchTerm;\n\n    // movieService.searchFor(searchTerm).then(movies => setMovies(movies));\n\n    if (movies.length !== 0) {\n\n        return (\n            <div>\n                <br />\n                <h4>\n                    Results for '{searchTerm.replaceAll('+', ' ')}':\n                </h4>\n                <br/>\n                <Table striped>\n                    <tbody>\n                        {movies.sort((a, b) =>\n                            a.popularity < b.popularity ? 1 : a.popularity > b.popularity ? -1 : 0)\n                            .map(movie => <MovieSearchDisplay key={movie.id}\n                                title={movie.title}\n                                release_date={movie.release_date}\n                                poster_path={movie.poster_path}\n                                id={movie.id} />)}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h4>\n                    No Results\n                </h4>\n                No results were found for your search term\n            </div>\n        );\n    }\n};\n\nexport default SearchDisplay;","import axios from 'axios';\n\nconst url = '/api/userServices';\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n};\n\nconst addToWatchlist = async (movie) => {\n    const config = {\n        headers: { Authorization: token }\n    };\n\n    // console.log(config);\n\n    // console.log(movie);\n\n    const response = await axios.post(`${url}/watchlist`, movie, config);\n    return response.data;\n};\n\nconst addToDiary = async (movie) => {\n    const config = {\n        headers: { Authorization: token }\n    };\n\n    // console.log(config);\n\n    // console.log(movie);\n\n    const response = await axios.post(`${url}/diary`, movie, config);\n    return response.data;\n};\n\nconst removeFromWatchlist = (id) => {\n    const config = {\n        headers: { Authorization: token }\n    };\n\n    return axios.delete(`${url}/watchlist/${id}`, config);\n};\n\nexport default { addToWatchlist, setToken, removeFromWatchlist, addToDiary };","import React from 'react';\nimport userService from '../services/user';\nimport { Button } from 'react-bootstrap';\n\nconst WatchlistButton = ({ id, title, poster_path, release_date, watchlist, setWatchlist, setNotify, setError }) => {\n\n    const handleAdd = (event) => {\n        event.preventDefault();\n        const toAdd = {\n            id: id,\n            title: title,\n            poster_path: poster_path,\n            release_date: release_date\n        };\n        // console.log(toAdd);\n        setNotify(`'${title}' added to watchlist`);\n        setTimeout(() => {\n            setNotify(null);\n        }, 3000);\n        userService.addToWatchlist(toAdd)\n            .then(returnedEntry => {\n                // console.log(returnedEntry);\n                setWatchlist(returnedEntry);\n            });\n\n\n\n    };\n    const handleRemove = (event) => {\n        event.preventDefault();\n        setError(`'${title}' has been removed from your watchlist`);\n        setTimeout(() => {\n            setError(null);\n        }, 3000);\n        userService.removeFromWatchlist(id).then(retrunedObject => {\n            // console.log(retrunedObject);\n            setWatchlist(retrunedObject.data);\n        });\n    };\n\n    if (watchlist.filter(entry => entry.movieId === id).length > 0) {\n        return (\n            <div>\n                <Button variant=\"outline-danger\" onClick={handleRemove}>\n                    remove from watchlist\n                </Button>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Button variant=\"outline-primary\" onClick={handleAdd}>\n                    add to watchlist\n                </Button >\n            </div>\n        );\n    }\n};\n\nexport default WatchlistButton;","import React from 'react';\nimport userService from '../services/user';\nimport { Button } from 'react-bootstrap';\n\nconst DiaryButton = ({ id, title, poster_path, release_date, setWatchlist, setDiary, setNotify }) => {\n    const handleLog = (event) => {\n        event.preventDefault();\n        const toAdd = {\n            id: id,\n            title: title,\n            poster_path: poster_path,\n            release_date: release_date\n        };\n\n        userService.addToDiary(toAdd).then(retrunedObject => {\n            // console.log(retrunedObject);\n            setDiary(retrunedObject);\n            remove();\n        });\n    };\n\n    const remove = () => {\n        userService.removeFromWatchlist(id).then(retrunedObject => {\n            // console.log(retrunedObject);\n            setWatchlist(retrunedObject.data);\n        });\n    };\n\n    return (\n        <div>\n            <Button variant=\"success\" onClick={handleLog}>Log film</Button>\n        </div>\n    );\n};\n\nexport default DiaryButton;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nconst FilmCard = ({ movie, cardSize, showCaption }) => {\n\n    return (\n        <Link to={`/movies/${movie.id}`} className=\"card\" style ={{ width: cardSize }}>\n            <Card.Img variant='top' src={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`}/>\n            {showCaption ? <Card.Body>\n                <Card.Title>{movie.title} ({movie.release_date ? movie.release_date.split('-')[0] : 'unreleased'})</Card.Title>\n            </Card.Body>\n                : null\n            }\n        </Link>\n    );\n\n};\n\nexport default FilmCard;","import React, { useEffect, useState } from 'react';\nimport WatchlistButton from './WatchlistButton';\nimport DiaryButton from './DiaryButton';\nimport FilmCard from './FilmCard';\nimport movieService from '../services/movies';\nimport { Button, ButtonGroup, ToggleButton, ListGroup, Spinner } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\n\nconst MovieInfo = ({ watchlist, setWatchlist, setDiary, setNotifyMessage, setErrorMessage, user }) => {\n    const [details, setDetails] = useState({});\n    const [credits, setCredits] = useState({});\n    const [view, setView] = useState('cast');\n    const [viewAll, setViewAll] = useState(false);\n    const [similarMovies, setSimilarMovies] = useState([]);\n\n    const id = useParams().id;\n\n    const history = useHistory();\n\n    useEffect(() => {\n        setView('cast');\n        movieService.getSelected(id).then(detail => {\n            setDetails(detail);});\n        movieService.getCredits(id).then(credit => {\n            setCredits(credit);});\n        movieService.getSimilar(id).then(movie => {\n            setSimilarMovies(movie);\n        });\n    }, [id]);\n\n    const toView = (page) => (event) => {\n        event.preventDefault();\n        setViewAll(false);\n        setView(page);\n    };\n\n    const toLogin = (event) => {\n        event.preventDefault();\n        history.push('/login');\n    };\n\n    const viewOption = (event) => {\n        event.preventDefault();\n        setViewAll(!viewAll);\n    };\n\n    const getDate = (date) => {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const rDate = new Date(date);\n\n        return `${monthNames[rDate.getMonth()]} ${rDate.getDate()} ${rDate.getFullYear()}`;\n    };\n\n    const viewCast = () => {\n        if (credits.cast) {\n            if (credits.cast.length > 10 && !viewAll) {\n                return(\n                    <ListGroup>\n                        {credits.cast.slice(0, 10)\n                            .map(credit =>\n                                <ListGroup.Item key={credit.id}>\n                                    {credit.name} ... {credit.character}\n                                </ListGroup.Item>)}\n                    </ListGroup>\n                );\n            } else {\n                return (\n                    <ListGroup>\n                        {credits.cast\n                            .map(credit =>\n                                <ListGroup.Item key={credit.id}>\n                                    {credit.name} ... {credit.character}\n                                </ListGroup.Item>)}\n                    </ListGroup>\n                );\n            }\n        } else {\n            return <div><Spinner animation=\"border\" size=\"sm\" /></div>;\n        }\n    };\n\n    const viewAllButton = () => {\n        if (viewAll) {\n            return (\n                <Button onClick={viewOption}>\n                    show less\n                </Button>\n            );\n        } else {\n            return (\n                <Button onClick={viewOption}>\n                    show all\n                </Button>\n            );\n        }\n    };\n\n    const viewCrew = () => {\n        if (credits.crew) {\n            return (\n                <ListGroup>\n                    {credits.crew.slice(0, 20).map(credit =>\n                        <ListGroup.Item key={credit.credit_id}>{credit.job} ... {credit.name}</ListGroup.Item>)}\n                </ListGroup>\n            );\n        } else {\n            return <div>\n                <Spinner animation=\"border\" size=\"sm\" />\n            </div>;\n        }\n    };\n\n    const viewDetails = () => {\n        if (details) {\n            return (\n                <ListGroup>\n                    <ListGroup.Item>Release date: {getDate(details.release_date)}</ListGroup.Item>\n                    <ListGroup.Item>\n                        <ListGroup>\n                            <div>Country:</div>\n                            {details.production_countries.map(cnt =>\n                                <ListGroup.Item key={cnt.name}>{cnt.name}</ListGroup.Item>)}\n                        </ListGroup>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <ListGroup>\n                            <div>Language:</div>\n                            {details.spoken_languages.map(lang =>\n                                <ListGroup.Item key={lang.iso_639_1}>{lang.name ? lang.name : lang.iso_639_1}</ListGroup.Item>)}\n                        </ListGroup>\n                    </ListGroup.Item>\n                </ListGroup>\n            );\n        } else {\n            return <div><Spinner animation=\"border\" size=\"sm\" /></div>;\n        }\n    };\n\n    const viewDescription = () => {\n        if (details.overview) {\n            return (\n                <div>\n                    <h5>\n                        {details.tagline}\n                    </h5>\n                    <p>\n                        {details.overview}\n                    </p>\n                    <p>\n                        runtime: {details.runtime} minutes\n                    </p>\n                    <p>\n                        more details at <Button href={`https://www.imdb.com/title/${details.imdb_id}`} variant=\"outline-secondary\" size=\"sm\">IMDb</Button>\n                    </p>\n                </div>\n            );\n        } else {\n            return <div><Spinner animation=\"border\" size=\"sm\" /></div>;\n        }\n    };\n\n    const viewGenre = () => {\n        if (details.genres) {\n            return (\n                <ListGroup>\n                    {details.genres.map(genre => <ListGroup.Item key={genre.id}>{genre.name}</ListGroup.Item>)}\n                </ListGroup>\n            );\n        } else {\n            return <div><Spinner animation=\"border\" size=\"sm\" /></div>;\n        }\n    };\n\n    const viewSimilar = () => {\n        if (similarMovies.length > 0) {\n            return (\n                <ListGroup horizontal>\n                    {similarMovies.slice(0,8).map(movie =>\n                        <FilmCard className='list-group-item' key={movie.id} movie={movie} cardSize='8rem' showCaption={false} />)}\n                </ListGroup>\n            );\n        }\n    };\n\n\n    const content = () => {\n        if (view === 'cast') {\n            if (credits.cast && credits.cast.length > 10) {\n                return <div>\n                    {viewCast()}\n                    {viewAllButton()}\n                </div>;\n            } else {\n                return <div>\n                    {viewCast()}\n                </div>;\n            }\n        } else if (view === 'crew') {\n            return viewCrew();\n        } else if (view === 'details') {\n            return <div>\n                {viewDetails()}\n            </div>;\n        } else if (view === 'genre') {\n            return viewGenre();\n        } else if(view === 'similar') {\n            return viewSimilar();\n        }\n    };\n\n    const radios = [\n        { name: 'Cast', value: 'cast' },\n        { name: 'Crew', value: 'crew' },\n        { name: 'Details', value: 'details' },\n        { name: 'Genre', value: 'genre' },\n        { name: 'Similar', value: 'similar' }\n    ];\n\n    const viewHeader = () => {\n        if (credits.crew.length !== 0) {\n            return (\n                <div>\n                    <h2>{details.title} ({details.release_date ? details.release_date.split('-')[0] : 'unreleased'})</h2>\n                    <div>Directed by {credits.crew.filter(credit => credit.job === 'Director')[0].name}</div>\n                    <img src={`http://image.tmdb.org/t/p/w185/${details.poster_path}`} alt=\"poster\"></img>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h2>{details.title} ({details.release_date ? details.release_date.split('-')[0] : 'unreleased'})</h2>\n                    <img src={`http://image.tmdb.org/t/p/w185/${details.poster_path}`} alt=\"poster\"></img>\n                </div>\n            );\n        }\n    };\n\n\n    if (details && credits.crew) {\n        return (\n            <div>\n                {viewHeader()}\n                {viewDescription()}\n                {user ? <div>\n                    <DiaryButton id={details.id}\n                        title={details.title}\n                        poster_path={details.poster_path}\n                        release_date={details.release_date}\n                        watchlist={watchlist}\n                        setWatchlist={setWatchlist}\n                        setDiary={setDiary}\n                        setNotify={setNotifyMessage} />\n                    <WatchlistButton id={details.id}\n                        title={details.title}\n                        poster_path={details.poster_path}\n                        release_date={details.release_date}\n                        watchlist={watchlist}\n                        setWatchlist={setWatchlist}\n                        setNotify={setNotifyMessage}\n                        setError={setErrorMessage} />\n                </div>\n                    :\n                    <div>\n                        <Button onClick={toLogin} variant=\"outline-secondary\">\n                            Log in to review and add to watchlist\n                        </Button>\n                    </div>\n                }\n                <ButtonGroup toggle>\n                    {radios.map((radio, index) => (\n                        <ToggleButton key={index}\n                            type=\"radio\"\n                            variant=\"secondary\"\n                            name=\"radio\"\n                            value={radio.value}\n                            checked={view === radio.value}\n                            onChange={toView(radio.value)}\n                        >\n                            {radio.name}\n                        </ToggleButton>\n                    ))}\n                </ButtonGroup>\n                {content()}\n            </div>);\n\n    } else {\n        return <div></div>;\n    }\n};\n\nexport default MovieInfo;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Watchlist = ({ watchlist }) => {\n    const displayPoster = (posterSource) => {\n        if (posterSource) {\n            return <img src={`http://image.tmdb.org/t/p/w92/${posterSource}`} alt={'poster'}/>;\n        }\n    };\n\n    return (\n        <div>\n            <h3>Your Watchlist</h3>\n            <ListGroup >\n                {watchlist.map(item =>\n                    <Link className=\"list-group-item-action\" key ={item.movieId} to={`/movies/${item.movieId}`}>\n                        {displayPoster(item.posterPath)}\n                        <h3>{item.title} ({item.releaseDate ? item.releaseDate.split('-')[0] : 'unreleased'}) </h3>\n                    </Link>\n                )\n                }\n            </ListGroup>\n        </div>\n    );\n};\n\nexport default Watchlist;\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Diary = ({ diary }) => {\n    const displayPoster = (posterSource) => {\n        if (posterSource) {\n            return <img src={`http://image.tmdb.org/t/p/w92/${posterSource}`} alt={'poster'}/>;\n        }\n    };\n\n    const getDate = (date) => {\n        return date.split(' ');\n    };\n\n    return (\n        <ListGroup>\n            {diary.sort((a, b) => Date.parse(b.dateLogged) - Date.parse(a.dateLogged)).map(item =>\n                <Link className=\"list-group-item-action\" key ={item._id} to={`/movies/${item.movieId}`}>\n                    <p>Watched: {`${getDate(item.dateLogged)[1]} ${getDate(item.dateLogged)[2]} ${getDate(item.dateLogged)[3]}`}</p>\n                    {displayPoster(item.posterPath)}\n                    <h3>{item.title} ({item.releaseDate ? item.releaseDate.split('-')[0] : 'unreleased'}) </h3>\n                </Link>\n            )\n            }\n        </ListGroup>\n    );\n};\n\nexport default Diary;","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <Alert variant=\"success\">\n            {message}\n        </Alert>\n    );\n};\n\nexport default Notification;","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <Alert variant=\"danger\">\n            {message}\n        </Alert>\n    );\n};\n\nexport default Error;","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst LoginForm = (props) => {\n\n    return (\n        <div>\n            <Form onSubmit={props.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>username:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"username\"\n                        value={props.username}\n                        name=\"Username\"\n                        onChange={props.handleUsernameChange}\n                    />\n\n                    <Form.Label>password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        id=\"password\"\n                        value={props.password}\n                        name=\"Password\"\n                        onChange={props.handlePasswordChange}\n                    />\n                    <Button variant=\"primary\" id=\"login-button\" type=\"submit\">login</Button>\n                </Form.Group>\n            </Form>\n        </div>\n    );\n};\n\nexport default LoginForm;","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst CreateUserForm = (props) => {\n\n    return (\n        <div>\n            <Form onSubmit={props.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>username:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"username\"\n                        value={props.username}\n                        name=\"Username\"\n                        onChange={props.handleUsernameChange}\n                    />\n                    <Form.Label>name:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        id=\"name\"\n                        value={props.name}\n                        name=\"Name\"\n                        onChange={props.handleNameChange}\n                    />\n                    <Form.Label>password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        id=\"password\"\n                        value={props.password}\n                        name=\"Password\"\n                        onChange={props.handlePasswordChange}\n                    />\n                    <Form.Label>confirm password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        id=\"password2\"\n                        value={props.password2}\n                        name=\"Password2\"\n                        onChange={props.handlePassword2Change}\n                    />\n                    <Button variant=\"primary\" id=\"login-button\" type=\"submit\">Create Account</Button>\n                </Form.Group>\n            </Form>\n        </div>\n    );\n};\n\nexport default CreateUserForm;","import React, { useEffect, useState } from 'react';\nimport movieService from '../services/movies';\nimport FilmCard from './FilmCard';\nimport { ListGroup } from 'react-bootstrap';\n\n\nconst HomePage = () => {\n    const [nowPlaying, setNowPlaying] = useState([]);\n    let itemsToDisplay = 0;\n    if (typeof window.orientation !== 'undefined') {\n        itemsToDisplay = 3;\n    } else {\n        itemsToDisplay = 6;\n    }\n\n    useEffect(() => {\n        movieService.getNowPlaying().then(movies => setNowPlaying(movies));\n    }, []);\n\n    if (nowPlaying.length > 0) {\n        return (\n            <div>\n                <h3>Now Playing: </h3>\n                <br />\n                <ListGroup horizontal>\n                    {nowPlaying.sort((a, b) => a.vote_count < b.vote_count ? 1 : a.vote_count > b.vote_count ? -1 : 0)\n                        .slice(0, itemsToDisplay).map(movie =>\n                            // <Link to={`/movies/${movie.id}`} className=\"list-group-item-action\" key={movie.id}>\n                            //     <img src={`http://image.tmdb.org/t/p/w92/${movie.poster_path}`} alt='poster'/>\n                            // </Link>)\n                            <FilmCard movie={movie} cardSize='18rem' key={movie.id} showCaption={true} />\n                        )}\n                </ListGroup>\n            </div>\n        );\n    } else {\n        return null;\n    }\n\n    // return null;\n};\n\nexport default HomePage;","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { login };","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst createUser = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { createUser };","import React, { useState, useEffect } from 'react';\n\n// Components\nimport Menu from './components/Menu';\nimport SearchDisplay from './components/SearchDisplay';\nimport MovieInfo from './components/MovieInfo';\nimport Watchlist from './components/Watchlist';\nimport Diary from './components/Diary';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\nimport LoginForm from './components/LoginForm';\nimport CreateUserForm from './components/CreateUserForm';\nimport HomePage from './components/HomePage';\n\n// Services\n// import movieService from './services/movies';\nimport loginService from './services/login';\nimport userService from './services/user';\nimport createUserService from './services/createUser';\nimport { Switch, Route, Link, useHistory } from 'react-router-dom';\n\n\nconst App = () => {\n    // Logged in user states\n    // const [movies, setMovies] = useState([]);\n    const [user, setUser] = useState(null);\n    const [watchlist, setWatchlist] = useState([]);\n    const [diary, setDiary] = useState([]);\n\n    // Log in/Create user page states. These are reset once the user is logged in\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [name, setName] = useState('');\n\n    // Notification states\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [notifyMessage, setNotifyMessage] = useState(null);\n\n    // const [searchTerm, setSearchTerm] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // Takes token from the browser's local storage and logs in user\n        const loggedUserJSON = window.localStorage.getItem('loggedMovieAppUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n            // movieService.setToken(user.token);\n            userService.setToken(user.token);\n            setWatchlist(user.watchlist);\n            setDiary(user.diary);\n        }\n    }, []);\n\n    const logUser = (userToLog) => {\n        // Sets the user states, log in message, and tokens in services\n        window.localStorage.setItem('loggedMovieAppUser', JSON.stringify(userToLog));\n        // movieService.setToken(userToLog.token);\n\n        userService.setToken(userToLog.token);\n        setUser(userToLog);\n        setWatchlist(userToLog.watchlist);\n        setDiary(userToLog.diary);\n        setUsername('');\n        setPassword('');\n        setPassword2('');\n        setName('');\n        // setPage('home');\n        history.push('/');\n        setNotifyMessage(`welcome ${userToLog.name}`);\n        setTimeout (() => {\n            setNotifyMessage(null);\n        }, 5000);\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n\n        try {\n            const user = await loginService.login({\n                username, password\n            });\n            logUser(user);\n        } catch (exception) {\n            setErrorMessage('Invalid username or password');\n            setTimeout(() => {\n                setErrorMessage(null);\n            }, 5000);\n        }\n\n    };\n\n    const handleNewUser = async (event) => {\n        event.preventDefault();\n\n        if (password !== password2) {\n            // checks if the password and confirmation password are identical\n            // resets both when if statement fails\n            setErrorMessage('the passwords do not match');\n            setPassword('');\n            setPassword2('');\n            setTimeout(() => {\n                setErrorMessage(null);\n            }, 5000);\n        } else {\n            try {\n                await createUserService.createUser({\n                    username, name, password\n                });\n\n                const user = await loginService.login({\n                    username, password\n                });\n                logUser(user);\n            } catch (exception) {\n                setErrorMessage('User already exists');\n                console.log(exception.message);\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 5000);\n            }\n\n        }\n\n    };\n\n    const handleLogout = (event) => {\n        event.preventDefault();\n        window.localStorage.removeItem('loggedMovieAppUser');\n        history.push('/');\n        window.location.reload();\n    };\n\n    const content = () => {\n        /*\n            Main Content of the site\n\n            The components are rendered depending on which state 'setPage' is currently in.\n\n            Homepage currently does not show anything as of 9/29/20.\n\n        */\n        return (\n            <Switch>\n                <Route path=\"/login\">\n                    <div>\n                        <h2>\n                            Log in to application\n                        </h2>\n                        <Error message={errorMessage} />\n                        <LoginForm\n                            username={username}\n                            password={password}\n                            handleUsernameChange={({ target }) => setUsername(target.value)}\n                            handlePasswordChange={({ target }) => setPassword(target.value)}\n                            handleSubmit={handleLogin}\n                        />\n                        <Link to=\"/create-account\">Create an account</Link>\n                    </div>\n                </Route>\n                <Route path=\"/create-account\">\n                    <div className=\"container\">\n                        <h2>\n                            Create an account\n                        </h2>\n                        <Error message={errorMessage} />\n                        <CreateUserForm\n                            username={username}\n                            password={password}\n                            password2={password2}\n                            name={name}\n                            handleUsernameChange={({ target }) => setUsername(target.value)}\n                            handleNameChange={({ target }) => setName(target.value)}\n                            handlePasswordChange={({ target }) => setPassword(target.value)}\n                            handlePassword2Change={({ target }) => setPassword2(target.value)}\n                            handleSubmit={handleNewUser}\n                        />\n                    </div>\n                </Route>\n                <Route path=\"/movies/:id\">\n                    <MovieInfo\n                        user={user}\n                        watchlist={watchlist}\n                        setWatchlist={setWatchlist}\n                        setDiary={setDiary}\n                        setNotifyMessage={setNotifyMessage}\n                        setErrorMessage={setErrorMessage}/>\n                </Route>\n                <Route path=\"/watchlist\">\n                    <Watchlist watchlist={watchlist} username={username} />\n                </Route>\n\n                <Route path=\"/diary\">\n                    <Diary diary={diary} />\n                </Route>\n\n                <Route path=\"/search/:searchTerm\">\n                    <SearchDisplay />\n                </Route>\n\n                <Route path=\"/\">\n                    <HomePage />\n                </Route>\n            </Switch>\n        );\n    };\n\n    return (\n        <div className=\"container\">\n            <Menu user={user}\n                watchlist={watchlist}\n                diary={diary}\n                handleLogout={handleLogout} />\n            <Notification message={notifyMessage} />\n            <Error message={errorMessage} />\n            {content()}\n            <footer>\n                <br />\n                <em>Adam Lapinski, 2020.\n                    Film data from <a href=\"https://www.themoviedb.org/\">TMDb</a></em>\n            </footer>\n        </div>\n    );\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}